---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.17.2
  name: backends.config.haproxy.com
spec:
  group: config.haproxy.com
  names:
    kind: Backend
    listKind: BackendList
    plural: backends
    singular: backend
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .spec.mode
      name: Mode
      type: string
    - jsonPath: .status.phase
      name: Phase
      type: string
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: Backend is the Schema for the backend API
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: BackendSpec defines the desired state of Backend
            properties:
              acl:
                description: |-
                  ACL (Access Control Lists) provides a flexible solution to perform
                  content switching and generally to take decisions based on content extracted
                  from the request, the response or any environmental status
                items:
                  properties:
                    criterion:
                      description: |-
                        Criterion is the name of a sample fetch method, or one of its ACL
                        specific declinations.
                      pattern: ^[^\s]+$
                      type: string
                    name:
                      description: Name
                      pattern: ^[^\s]+$
                      type: string
                    values:
                      description: Values are of the type supported by the criterion.
                      items:
                        type: string
                      type: array
                  required:
                  - criterion
                  - name
                  - values
                  type: object
                type: array
              balance:
                description: Balance defines the load balancing algorithm to be used
                  in a backend.
                properties:
                  algorithm:
                    description: Algorithm is the algorithm used to select a server
                      when doing load balancing. This only applies when no persistence
                      information is available, or when a connection is redispatched
                      to another server.
                    enum:
                    - roundrobin
                    - static-rr
                    - leastconn
                    - first
                    - source
                    - uri
                    - hdr
                    - random
                    - rdp-cookie
                    type: string
                required:
                - algorithm
                type: object
              checkTimeout:
                description: |-
                  CheckTimeout sets an additional check timeout, but only after a connection has been already
                  established.
                type: string
              cookie:
                description: Cookie enables cookie-based persistence in a backend.
                properties:
                  attribute:
                    description: Attribute add an extra attribute when a cookie is
                      inserted.
                    items:
                      type: string
                    type: array
                  domain:
                    description: |-
                      Domain specify the domain at which a cookie is inserted. You can specify
                      several domain names by invoking this option multiple times.
                    items:
                      type: string
                    type: array
                  dynamic:
                    description: |-
                      Dynamic activates dynamic cookies, when used, a session cookie is dynamically created for each server,
                      based on the IP and port of the server, and a secret key.
                    type: boolean
                  httpOnly:
                    description: |-
                      HTTPOnly add an "HttpOnly" cookie attribute when a cookie is inserted.
                      It doesn't share the cookie with non-HTTP components.
                    type: boolean
                  indirect:
                    description: |-
                      Indirect no cookie will be emitted to a client which already has a valid one
                      for the server which has processed the request.
                    type: boolean
                  maxIdle:
                    description: MaxIdle cookies are ignored after some idle time.
                    format: int64
                    type: integer
                  maxLife:
                    description: MaxLife cookies are ignored after some life time.
                    format: int64
                    type: integer
                  mode:
                    description: Mode could be 'rewrite', 'insert', 'prefix'. Select
                      one.
                    properties:
                      insert:
                        description: Insert cookie will have to be inserted by haproxy
                          in server responses.
                        type: boolean
                      prefix:
                        description: |-
                          Prefix is needed in some specific environments where the client does not support
                          more than one single cookie and the application already needs it.
                        type: boolean
                      rewrite:
                        description: Rewrite the cookie will be provided by the server.
                        type: boolean
                    required:
                    - insert
                    - prefix
                    - rewrite
                    type: object
                  name:
                    description: Name of the cookie which will be monitored, modified
                      or inserted in order to bring persistence.
                    type: string
                  noCache:
                    description: |-
                      NoCache recommended in conjunction with the insert mode when there is a cache
                      between the client and HAProx
                    type: boolean
                  postOnly:
                    description: PostOnly ensures that cookie insertion will only
                      be performed on responses to POST requests.
                    type: boolean
                  preserve:
                    description: |-
                      Preserve only be used with "insert" and/or "indirect". It allows the server
                      to emit the persistence cookie itself.
                    type: boolean
                  secure:
                    description: |-
                      Secure add a "Secure" cookie attribute when a cookie is inserted. The user agent
                      never emits this cookie over non-secure channels. The cookie will be presented
                      only over SSL/TLS connections.
                    type: boolean
                type: object
              errorFiles:
                description: ErrorFiles custom error files to be used
                items:
                  properties:
                    code:
                      description: Code is the HTTP status code.
                      enum:
                      - 200
                      - 400
                      - 401
                      - 403
                      - 404
                      - 405
                      - 407
                      - 408
                      - 410
                      - 413
                      - 425
                      - 429
                      - 500
                      - 501
                      - 502
                      - 503
                      - 504
                      format: int64
                      type: integer
                    file:
                      description: File designates a file containing the full HTTP
                        response.
                      properties:
                        name:
                          type: string
                        value:
                          type: string
                        valueFrom:
                          properties:
                            configMapKeyRef:
                              description: ConfigMapKeyRef selects a key of a ConfigMap.
                              properties:
                                key:
                                  description: The key to select.
                                  type: string
                                name:
                                  default: ""
                                  description: |-
                                    Name of the referent.
                                    This field is effectively required, but due to backwards compatibility is
                                    allowed to be empty. Instances of this type with an empty value here are
                                    almost certainly wrong.
                                    More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                  type: string
                                optional:
                                  description: Specify whether the ConfigMap or its
                                    key must be defined
                                  type: boolean
                              required:
                              - key
                              type: object
                              x-kubernetes-map-type: atomic
                          type: object
                      required:
                      - name
                      type: object
                  required:
                  - code
                  - file
                  type: object
                type: array
              forwardFor:
                description: Forwardfor enable insertion of the X-Forwarded-For header
                  to requests sent to servers
                properties:
                  enabled:
                    type: boolean
                  except:
                    description: 'Pattern: ^[^\s]+$'
                    type: string
                  header:
                    description: 'Pattern: ^[^\s]+$'
                    type: string
                  ifnone:
                    type: boolean
                required:
                - enabled
                type: object
              hashType:
                description: HashType specifies a method to use for mapping hashes
                  to servers
                properties:
                  function:
                    enum:
                    - sdbm
                    - djb2
                    - wt6
                    - crc32
                    type: string
                  method:
                    enum:
                    - map-based
                    - consistent
                    type: string
                  modifier:
                    enum:
                    - avalanche
                    type: string
                type: object
              hostCertificate:
                description: HostCertificate specifies a certificate for that host
                  used in the crt-list of a frontend
                properties:
                  alpn:
                    description: |-
                      Alpn enables the TLS ALPN extension and advertises the specified protocol
                      list as supported on top of ALPN.
                    items:
                      type: string
                    type: array
                  certificate:
                    description: |-
                      Certificate that will be presented to clients who provide a valid
                      TLSServerNameIndication field matching the SNIFilter.
                    properties:
                      name:
                        type: string
                      value:
                        type: string
                      valueFrom:
                        items:
                          properties:
                            configMapKeyRef:
                              description: ConfigMapKeyRef selects a key of a ConfigMap
                              properties:
                                key:
                                  description: The key to select.
                                  type: string
                                name:
                                  default: ""
                                  description: |-
                                    Name of the referent.
                                    This field is effectively required, but due to backwards compatibility is
                                    allowed to be empty. Instances of this type with an empty value here are
                                    almost certainly wrong.
                                    More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                  type: string
                                optional:
                                  description: Specify whether the ConfigMap or its
                                    key must be defined
                                  type: boolean
                              required:
                              - key
                              type: object
                              x-kubernetes-map-type: atomic
                            secretKeyRef:
                              description: SecretKeyRef selects a key of a secret
                                in the pod namespace
                              properties:
                                key:
                                  description: The key of the secret to select from.  Must
                                    be a valid secret key.
                                  type: string
                                name:
                                  default: ""
                                  description: |-
                                    Name of the referent.
                                    This field is effectively required, but due to backwards compatibility is
                                    allowed to be empty. Instances of this type with an empty value here are
                                    almost certainly wrong.
                                    More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                  type: string
                                optional:
                                  description: Specify whether the Secret or its key
                                    must be defined
                                  type: boolean
                              required:
                              - key
                              type: object
                              x-kubernetes-map-type: atomic
                          type: object
                        type: array
                    required:
                    - name
                    type: object
                  ocsp:
                    description: Ocsp Enable OCSP stapling for a specific certificate
                    type: boolean
                  ocsp_file:
                    description: OcspFile you can save the OCSP response to a file
                      so that HAProxy loads it during startup.
                    properties:
                      name:
                        description: Name
                        type: string
                      value:
                        description: Value
                        type: string
                    required:
                    - name
                    type: object
                  sniFilter:
                    description: SNIFilter specifies the filter for the SSL Certificate.  Wildcards
                      are supported in the SNIFilter. Negative filter are also supported.
                    type: string
                required:
                - certificate
                - sniFilter
                type: object
              hostRegex:
                description: HostRegex specifies a regular expression used for backend
                  switching rules.
                type: string
              httpLog:
                description: |-
                  HTTPLog enables HTTP log format which is the most complete and the best suited for HTTP proxies. It provides
                  the same level of information as the TCP format with additional features which
                  are specific to the HTTP protocol.
                type: boolean
              httpPretendKeepalive:
                description: HTTPPretendKeepalive will keep the connection alive.
                  It is recommended not to enable this option by default.
                type: boolean
              httpRequest:
                description: HTTPRequest rules define a set of rules which apply to
                  layer 7 processing.
                properties:
                  addHeader:
                    description: AddHeader appends HTTP header fields
                    items:
                      properties:
                        condition:
                          description: Condition is a condition composed of ACLs.
                          type: string
                        conditionType:
                          description: ConditionType specifies the type of the condition
                            matching ('if' or 'unless')
                          enum:
                          - if
                          - unless
                          type: string
                        name:
                          description: Name specifies the header name
                          type: string
                        value:
                          description: Value specifies the header value
                          properties:
                            env:
                              description: Env variable with the header value
                              properties:
                                name:
                                  description: Name of the environment variable. Must
                                    be a C_IDENTIFIER.
                                  type: string
                                value:
                                  description: |-
                                    Variable references $(VAR_NAME) are expanded
                                    using the previously defined environment variables in the container and
                                    any service environment variables. If a variable cannot be resolved,
                                    the reference in the input string will be unchanged. Double $$ are reduced
                                    to a single $, which allows for escaping the $(VAR_NAME) syntax: i.e.
                                    "$$(VAR_NAME)" will produce the string literal "$(VAR_NAME)".
                                    Escaped references will never be expanded, regardless of whether the variable
                                    exists or not.
                                    Defaults to "".
                                  type: string
                                valueFrom:
                                  description: Source for the environment variable's
                                    value. Cannot be used if value is not empty.
                                  properties:
                                    configMapKeyRef:
                                      description: Selects a key of a ConfigMap.
                                      properties:
                                        key:
                                          description: The key to select.
                                          type: string
                                        name:
                                          default: ""
                                          description: |-
                                            Name of the referent.
                                            This field is effectively required, but due to backwards compatibility is
                                            allowed to be empty. Instances of this type with an empty value here are
                                            almost certainly wrong.
                                            More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                          type: string
                                        optional:
                                          description: Specify whether the ConfigMap
                                            or its key must be defined
                                          type: boolean
                                      required:
                                      - key
                                      type: object
                                      x-kubernetes-map-type: atomic
                                    fieldRef:
                                      description: |-
                                        Selects a field of the pod: supports metadata.name, metadata.namespace, `metadata.labels['<KEY>']`, `metadata.annotations['<KEY>']`,
                                        spec.nodeName, spec.serviceAccountName, status.hostIP, status.podIP, status.podIPs.
                                      properties:
                                        apiVersion:
                                          description: Version of the schema the FieldPath
                                            is written in terms of, defaults to "v1".
                                          type: string
                                        fieldPath:
                                          description: Path of the field to select
                                            in the specified API version.
                                          type: string
                                      required:
                                      - fieldPath
                                      type: object
                                      x-kubernetes-map-type: atomic
                                    resourceFieldRef:
                                      description: |-
                                        Selects a resource of the container: only resources limits and requests
                                        (limits.cpu, limits.memory, limits.ephemeral-storage, requests.cpu, requests.memory and requests.ephemeral-storage) are currently supported.
                                      properties:
                                        containerName:
                                          description: 'Container name: required for
                                            volumes, optional for env vars'
                                          type: string
                                        divisor:
                                          anyOf:
                                          - type: integer
                                          - type: string
                                          description: Specifies the output format
                                            of the exposed resources, defaults to
                                            "1"
                                          pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                          x-kubernetes-int-or-string: true
                                        resource:
                                          description: 'Required: resource to select'
                                          type: string
                                      required:
                                      - resource
                                      type: object
                                      x-kubernetes-map-type: atomic
                                    secretKeyRef:
                                      description: Selects a key of a secret in the
                                        pod's namespace
                                      properties:
                                        key:
                                          description: The key of the secret to select
                                            from.  Must be a valid secret key.
                                          type: string
                                        name:
                                          default: ""
                                          description: |-
                                            Name of the referent.
                                            This field is effectively required, but due to backwards compatibility is
                                            allowed to be empty. Instances of this type with an empty value here are
                                            almost certainly wrong.
                                            More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                          type: string
                                        optional:
                                          description: Specify whether the Secret
                                            or its key must be defined
                                          type: boolean
                                      required:
                                      - key
                                      type: object
                                      x-kubernetes-map-type: atomic
                                  type: object
                              required:
                              - name
                              type: object
                            format:
                              description: Format specifies the format of the header
                                value (implicit default is '%s')
                              type: string
                            str:
                              description: Str with the header value
                              type: string
                          type: object
                      required:
                      - name
                      - value
                      type: object
                    type: array
                  delHeader:
                    description: DelHeader removes all HTTP header fields
                    items:
                      properties:
                        condition:
                          description: Condition is a condition composed of ACLs.
                          type: string
                        conditionType:
                          description: ConditionType specifies the type of the condition
                            matching ('if' or 'unless')
                          enum:
                          - if
                          - unless
                          type: string
                        method:
                          description: Method is the matching applied on the header
                            name
                          enum:
                          - str
                          - beg
                          - end
                          - sub
                          - reg
                          type: string
                        name:
                          description: Name specifies the header name
                          type: string
                      required:
                      - name
                      type: object
                    type: array
                  deny:
                    description: |-
                      Deny stops the evaluation of the rules and immediately rejects the request and emits an HTTP 403 error.
                      Optionally the status code specified as an argument to deny_status.
                    items:
                      properties:
                        condition:
                          description: Condition is a condition composed of ACLs.
                          type: string
                        conditionType:
                          description: ConditionType specifies the type of the condition
                            matching ('if' or 'unless')
                          enum:
                          - if
                          - unless
                          type: string
                        denyStatus:
                          description: DenyStatus is the HTTP status code.
                          format: int64
                          maximum: 599
                          minimum: 200
                          type: integer
                        enabled:
                          description: Enabled enables deny http request
                          type: boolean
                      required:
                      - enabled
                      type: object
                    type: array
                  redirect:
                    description: Redirect performs an HTTP redirection based on a
                      redirect rule.
                    items:
                      properties:
                        code:
                          description: Code indicates which type of HTTP redirection
                            is desired.
                          enum:
                          - 301
                          - 302
                          - 303
                          - 307
                          - 308
                          format: int64
                          type: integer
                        condition:
                          description: Condition is a condition composed of ACLs.
                          type: string
                        conditionType:
                          description: ConditionType specifies the type of the condition
                            matching ('if' or 'unless')
                          enum:
                          - if
                          - unless
                          type: string
                        option:
                          description: Value to redirect
                          properties:
                            ClearCookie:
                              description: |-
                                ClearCookie is to instruct the browser to delete the cookie. It will be added with NAME (and optionally "=").
                                To add "=" type any string in the value field
                              properties:
                                name:
                                  description: Name
                                  type: string
                                value:
                                  description: Value
                                  type: string
                              type: object
                            SetCookie:
                              description: SetCookie adds header to the redirection.
                                It will be added with NAME (and optionally "=value")
                              properties:
                                name:
                                  description: Name
                                  type: string
                                value:
                                  description: Value
                                  type: string
                              type: object
                            appendSlash:
                              description: AppendSlash adds a / character at the end
                                of the URL.
                              type: boolean
                            dropQuery:
                              description: DropQuery removes the query string from
                                the original URL when performing the concatenation.
                              type: boolean
                          type: object
                        type:
                          description: Type selects a mode and value to redirect
                          properties:
                            insert:
                              description: Prefix adds a prefix to the URL's location.
                              type: boolean
                            location:
                              description: Location replaces the entire location of
                                a URL.
                              type: boolean
                            prefix:
                              description: Scheme redirects to a different scheme.
                              type: boolean
                          type: object
                        value:
                          description: Value to redirect
                          type: string
                      type: object
                    type: array
                  replacePath:
                    description: |-
                      ReplacePath matches the value of the path using a regex and completely replaces it with the specified format.
                      The replacement does not modify the scheme, the authority and the query-string.
                    items:
                      properties:
                        condition:
                          description: Condition is a condition composed of ACLs.
                          type: string
                        conditionType:
                          description: ConditionType specifies the type of the condition
                            matching ('if' or 'unless')
                          enum:
                          - if
                          - unless
                          type: string
                        matchRegex:
                          description: MatchRegex is a string pattern used to identify
                            the paths that need to be replaced.
                          type: string
                        replaceFmt:
                          description: ReplaceFmt defines the format string used to
                            replace the values that match the pattern.
                          type: string
                      required:
                      - matchRegex
                      - replaceFmt
                      type: object
                    type: array
                  return:
                    description: Return stops the evaluation of the rules and immediately
                      returns a response.
                    properties:
                      content:
                        description: Content is a full HTTP response specifying the
                          errorfile to use, or the response payload specifying the
                          file or the string to use.
                        properties:
                          format:
                            description: ContentFormat defines the format of the Content.
                              Can be one an errorfile or a string.
                            enum:
                            - default-errorfile
                            - errorfile
                            - errorfiles
                            - file
                            - lf-file
                            - string
                            - lf-string
                            type: string
                          type:
                            description: Type specifies the content-type of the HTTP
                              response.
                            type: string
                          value:
                            description: Value specifying the file or the string to
                              use.
                            type: string
                        required:
                        - format
                        - type
                        - value
                        type: object
                      status:
                        default: 200
                        description: Status can be optionally specified, the default
                          status code used for the response is 200.
                        format: int64
                        type: integer
                    required:
                    - content
                    type: object
                  setHeader:
                    description: SetHeader sets HTTP header fields
                    items:
                      properties:
                        condition:
                          description: Condition is a condition composed of ACLs.
                          type: string
                        conditionType:
                          description: ConditionType specifies the type of the condition
                            matching ('if' or 'unless')
                          enum:
                          - if
                          - unless
                          type: string
                        name:
                          description: Name specifies the header name
                          type: string
                        value:
                          description: Value specifies the header value
                          properties:
                            env:
                              description: Env variable with the header value
                              properties:
                                name:
                                  description: Name of the environment variable. Must
                                    be a C_IDENTIFIER.
                                  type: string
                                value:
                                  description: |-
                                    Variable references $(VAR_NAME) are expanded
                                    using the previously defined environment variables in the container and
                                    any service environment variables. If a variable cannot be resolved,
                                    the reference in the input string will be unchanged. Double $$ are reduced
                                    to a single $, which allows for escaping the $(VAR_NAME) syntax: i.e.
                                    "$$(VAR_NAME)" will produce the string literal "$(VAR_NAME)".
                                    Escaped references will never be expanded, regardless of whether the variable
                                    exists or not.
                                    Defaults to "".
                                  type: string
                                valueFrom:
                                  description: Source for the environment variable's
                                    value. Cannot be used if value is not empty.
                                  properties:
                                    configMapKeyRef:
                                      description: Selects a key of a ConfigMap.
                                      properties:
                                        key:
                                          description: The key to select.
                                          type: string
                                        name:
                                          default: ""
                                          description: |-
                                            Name of the referent.
                                            This field is effectively required, but due to backwards compatibility is
                                            allowed to be empty. Instances of this type with an empty value here are
                                            almost certainly wrong.
                                            More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                          type: string
                                        optional:
                                          description: Specify whether the ConfigMap
                                            or its key must be defined
                                          type: boolean
                                      required:
                                      - key
                                      type: object
                                      x-kubernetes-map-type: atomic
                                    fieldRef:
                                      description: |-
                                        Selects a field of the pod: supports metadata.name, metadata.namespace, `metadata.labels['<KEY>']`, `metadata.annotations['<KEY>']`,
                                        spec.nodeName, spec.serviceAccountName, status.hostIP, status.podIP, status.podIPs.
                                      properties:
                                        apiVersion:
                                          description: Version of the schema the FieldPath
                                            is written in terms of, defaults to "v1".
                                          type: string
                                        fieldPath:
                                          description: Path of the field to select
                                            in the specified API version.
                                          type: string
                                      required:
                                      - fieldPath
                                      type: object
                                      x-kubernetes-map-type: atomic
                                    resourceFieldRef:
                                      description: |-
                                        Selects a resource of the container: only resources limits and requests
                                        (limits.cpu, limits.memory, limits.ephemeral-storage, requests.cpu, requests.memory and requests.ephemeral-storage) are currently supported.
                                      properties:
                                        containerName:
                                          description: 'Container name: required for
                                            volumes, optional for env vars'
                                          type: string
                                        divisor:
                                          anyOf:
                                          - type: integer
                                          - type: string
                                          description: Specifies the output format
                                            of the exposed resources, defaults to
                                            "1"
                                          pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                          x-kubernetes-int-or-string: true
                                        resource:
                                          description: 'Required: resource to select'
                                          type: string
                                      required:
                                      - resource
                                      type: object
                                      x-kubernetes-map-type: atomic
                                    secretKeyRef:
                                      description: Selects a key of a secret in the
                                        pod's namespace
                                      properties:
                                        key:
                                          description: The key of the secret to select
                                            from.  Must be a valid secret key.
                                          type: string
                                        name:
                                          default: ""
                                          description: |-
                                            Name of the referent.
                                            This field is effectively required, but due to backwards compatibility is
                                            allowed to be empty. Instances of this type with an empty value here are
                                            almost certainly wrong.
                                            More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                          type: string
                                        optional:
                                          description: Specify whether the Secret
                                            or its key must be defined
                                          type: boolean
                                      required:
                                      - key
                                      type: object
                                      x-kubernetes-map-type: atomic
                                  type: object
                              required:
                              - name
                              type: object
                            format:
                              description: Format specifies the format of the header
                                value (implicit default is '%s')
                              type: string
                            str:
                              description: Str with the header value
                              type: string
                          type: object
                      required:
                      - name
                      - value
                      type: object
                    type: array
                  setPath:
                    description: SetPath sets request path
                    items:
                      properties:
                        condition:
                          description: Condition is a condition composed of ACLs.
                          type: string
                        conditionType:
                          description: ConditionType specifies the type of the condition
                            matching ('if' or 'unless')
                          enum:
                          - if
                          - unless
                          type: string
                        format:
                          description: Value specifies the path value
                          type: string
                      type: object
                    type: array
                type: object
              httpResponse:
                description: HTTPResponse rules define a set of rules which apply
                  to layer 7 processing.
                properties:
                  setHeader:
                    description: SetHeader sets HTTP header fields
                    items:
                      properties:
                        condition:
                          description: Condition is a condition composed of ACLs.
                          type: string
                        conditionType:
                          description: ConditionType specifies the type of the condition
                            matching ('if' or 'unless')
                          enum:
                          - if
                          - unless
                          type: string
                        name:
                          description: Name specifies the header name
                          type: string
                        value:
                          description: Value specifies the header value
                          properties:
                            env:
                              description: Env variable with the header value
                              properties:
                                name:
                                  description: Name of the environment variable. Must
                                    be a C_IDENTIFIER.
                                  type: string
                                value:
                                  description: |-
                                    Variable references $(VAR_NAME) are expanded
                                    using the previously defined environment variables in the container and
                                    any service environment variables. If a variable cannot be resolved,
                                    the reference in the input string will be unchanged. Double $$ are reduced
                                    to a single $, which allows for escaping the $(VAR_NAME) syntax: i.e.
                                    "$$(VAR_NAME)" will produce the string literal "$(VAR_NAME)".
                                    Escaped references will never be expanded, regardless of whether the variable
                                    exists or not.
                                    Defaults to "".
                                  type: string
                                valueFrom:
                                  description: Source for the environment variable's
                                    value. Cannot be used if value is not empty.
                                  properties:
                                    configMapKeyRef:
                                      description: Selects a key of a ConfigMap.
                                      properties:
                                        key:
                                          description: The key to select.
                                          type: string
                                        name:
                                          default: ""
                                          description: |-
                                            Name of the referent.
                                            This field is effectively required, but due to backwards compatibility is
                                            allowed to be empty. Instances of this type with an empty value here are
                                            almost certainly wrong.
                                            More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                          type: string
                                        optional:
                                          description: Specify whether the ConfigMap
                                            or its key must be defined
                                          type: boolean
                                      required:
                                      - key
                                      type: object
                                      x-kubernetes-map-type: atomic
                                    fieldRef:
                                      description: |-
                                        Selects a field of the pod: supports metadata.name, metadata.namespace, `metadata.labels['<KEY>']`, `metadata.annotations['<KEY>']`,
                                        spec.nodeName, spec.serviceAccountName, status.hostIP, status.podIP, status.podIPs.
                                      properties:
                                        apiVersion:
                                          description: Version of the schema the FieldPath
                                            is written in terms of, defaults to "v1".
                                          type: string
                                        fieldPath:
                                          description: Path of the field to select
                                            in the specified API version.
                                          type: string
                                      required:
                                      - fieldPath
                                      type: object
                                      x-kubernetes-map-type: atomic
                                    resourceFieldRef:
                                      description: |-
                                        Selects a resource of the container: only resources limits and requests
                                        (limits.cpu, limits.memory, limits.ephemeral-storage, requests.cpu, requests.memory and requests.ephemeral-storage) are currently supported.
                                      properties:
                                        containerName:
                                          description: 'Container name: required for
                                            volumes, optional for env vars'
                                          type: string
                                        divisor:
                                          anyOf:
                                          - type: integer
                                          - type: string
                                          description: Specifies the output format
                                            of the exposed resources, defaults to
                                            "1"
                                          pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                          x-kubernetes-int-or-string: true
                                        resource:
                                          description: 'Required: resource to select'
                                          type: string
                                      required:
                                      - resource
                                      type: object
                                      x-kubernetes-map-type: atomic
                                    secretKeyRef:
                                      description: Selects a key of a secret in the
                                        pod's namespace
                                      properties:
                                        key:
                                          description: The key of the secret to select
                                            from.  Must be a valid secret key.
                                          type: string
                                        name:
                                          default: ""
                                          description: |-
                                            Name of the referent.
                                            This field is effectively required, but due to backwards compatibility is
                                            allowed to be empty. Instances of this type with an empty value here are
                                            almost certainly wrong.
                                            More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                          type: string
                                        optional:
                                          description: Specify whether the Secret
                                            or its key must be defined
                                          type: boolean
                                      required:
                                      - key
                                      type: object
                                      x-kubernetes-map-type: atomic
                                  type: object
                              required:
                              - name
                              type: object
                            format:
                              description: Format specifies the format of the header
                                value (implicit default is '%s')
                              type: string
                            str:
                              description: Str with the header value
                              type: string
                          type: object
                      required:
                      - name
                      - value
                      type: object
                    type: array
                type: object
              httpchk:
                description: HTTPChk Enables HTTP protocol to check on the servers
                  health
                properties:
                  method:
                    description: |-
                      Method http method
                      Enum: [HEAD PUT POST GET TRACE PATCH DELETE CONNECT OPTIONS]
                    enum:
                    - HEAD
                    - PUT
                    - POST
                    - GET
                    - TRACE
                    - PATCH
                    - DELETE
                    - CONNECT
                    - OPTIONS
                    type: string
                  uri:
                    description: URI
                    type: string
                type: object
              mode:
                default: http
                description: Mode can be either 'tcp' or 'http'. In TCP mode it is
                  a layer 4 proxy. In HTTP mode it is a layer 7 proxy.
                enum:
                - http
                - tcp
                type: string
              redispatch:
                description: Redispatch enable or disable session redistribution in
                  case of connection failure
                type: boolean
              serverTemplates:
                description: ServerTemplates defines the backend server templates
                  and its configuration.
                items:
                  properties:
                    SendProxyV2:
                      description: SendProxyV2 preparing new update.
                      properties:
                        v1:
                          description: V1 parameter enforces use of the PROXY protocol
                            version 1.
                          type: boolean
                        v2:
                          description: V2 parameter enforces use of the PROXY protocol
                            version 2.
                          properties:
                            enabled:
                              description: Enabled enables the PROXY protocol version
                                2.
                              type: boolean
                            options:
                              description: Options is a list of options to add to
                                the PROXY protocol header.
                              properties:
                                authority:
                                  description: Authority is the host name value passed
                                    by the client (only SNI from a TLS)
                                  type: boolean
                                certCn:
                                  description: CertCn is equivalent to use V2SSLCN.
                                  type: boolean
                                certKey:
                                  description: CertKey is the key algorithm of the
                                    used certificate.
                                  type: boolean
                                certSig:
                                  description: CertSig is the signature algorithm
                                    of the used certificate.
                                  type: boolean
                                crc32C:
                                  description: Crc32c is the checksum of the PROXYv2
                                    header.
                                  type: boolean
                                ssl:
                                  description: Ssl is equivalent to use V2SSL.
                                  type: boolean
                                sslCipher:
                                  description: SslCipher is the name of the used cipher.
                                  type: boolean
                                uniqueID:
                                  description: |-
                                    UniqueId sends a unique ID generated using the frontend's "unique-id-format" within the PROXYv2 header.
                                    This unique-id is primarily meant for "mode tcp". It can lead to unexpected results in "mode http".
                                  type: boolean
                              type: object
                          type: object
                        v2SSL:
                          description: V2SSL parameter add the SSL information extension
                            of the PROXY protocol to the PROXY protocol header.
                          type: boolean
                        v2SSLCN:
                          description: |-
                            V2SSLCN parameter add the SSL information extension of the PROXY protocol to the PROXY protocol header and he SSL information extension
                            along with the Common Name from the subject of the client certificate (if any), is added to the PROXY protocol header.
                          type: boolean
                      type: object
                    check:
                      description: Check configures the health checks of the server.
                      properties:
                        enabled:
                          description: |-
                            Enable enables health checks on a server. If not set, no health checking is performed, and the server is always
                            considered available.
                          type: boolean
                        fall:
                          description: |-
                            Fall specifies the number of consecutive unsuccessful health checks after a server will be considered as dead.
                            This value defaults to 3 if unspecified.
                          format: int64
                          type: integer
                        inter:
                          description: Inter sets the interval between two consecutive
                            health checks. If left unspecified, the delay defaults
                            to 2000 ms.
                          type: string
                        rise:
                          description: |-
                            Rise specifies the number of consecutive successful health checks after a server will be considered as operational.
                            This value defaults to 2 if unspecified.
                          format: int64
                          type: integer
                      required:
                      - enabled
                      type: object
                    checkSNI:
                      description: CheckSNI This option allows you to specify the
                        SNI to be used when doing health checks over SSL
                      type: string
                    cookie:
                      description: Cookie sets the cookie value assigned to the server.
                      type: boolean
                    fqdn:
                      description: FQDN for all the servers this template initializes.
                      type: string
                    initAddr:
                      description: |-
                        InitAddr indicates in what order the server address should be resolved upon startup if it uses an FQDN.
                        Attempts are made to resolve the address by applying in turn each of the methods mentioned in the comma-delimited
                        list. The first method which succeeds is used.
                      type: string
                    num:
                      description: Num is the max number of servers as server name
                        suffixes this template initializes.
                      format: int64
                      type: integer
                    numMin:
                      description: NumMin is the min number of servers as server name
                        suffixes this template initializes.
                      format: int64
                      type: integer
                    port:
                      description: Port
                      format: int64
                      maximum: 65535
                      minimum: 1
                      type: integer
                    prefix:
                      description: Prefix for the server names to be built.
                      pattern: ^[^\s]+$
                      type: string
                    resolvers:
                      description: Resolvers points to an existing resolvers to resolve
                        current server hostname.
                      properties:
                        name:
                          default: ""
                          description: |-
                            Name of the referent.
                            This field is effectively required, but due to backwards compatibility is
                            allowed to be empty. Instances of this type with an empty value here are
                            almost certainly wrong.
                            More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                          type: string
                      type: object
                      x-kubernetes-map-type: atomic
                    sendProxy:
                      description: |-
                        SendProxy enforces use of the PROXY protocol over any
                        connection established to this server. The PROXY protocol informs the other
                        end about the layer 3/4 addresses of the incoming connection, so that it can
                        know the client address or the public address it accessed to, whatever the
                        upper layer protocol.
                      type: boolean
                    ssl:
                      description: SSL configures OpenSSL
                      properties:
                        alpn:
                          description: |-
                            Alpn enables the TLS ALPN extension and advertises the specified protocol
                            list as supported on top of ALPN.
                          items:
                            type: string
                          type: array
                        caCertificate:
                          description: CACertificate configures the CACertificate
                            used for the Server or Bind client certificate
                          properties:
                            name:
                              type: string
                            value:
                              type: string
                            valueFrom:
                              items:
                                properties:
                                  configMapKeyRef:
                                    description: ConfigMapKeyRef selects a key of
                                      a ConfigMap
                                    properties:
                                      key:
                                        description: The key to select.
                                        type: string
                                      name:
                                        default: ""
                                        description: |-
                                          Name of the referent.
                                          This field is effectively required, but due to backwards compatibility is
                                          allowed to be empty. Instances of this type with an empty value here are
                                          almost certainly wrong.
                                          More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                        type: string
                                      optional:
                                        description: Specify whether the ConfigMap
                                          or its key must be defined
                                        type: boolean
                                    required:
                                    - key
                                    type: object
                                    x-kubernetes-map-type: atomic
                                  secretKeyRef:
                                    description: SecretKeyRef selects a key of a secret
                                      in the pod namespace
                                    properties:
                                      key:
                                        description: The key of the secret to select
                                          from.  Must be a valid secret key.
                                        type: string
                                      name:
                                        default: ""
                                        description: |-
                                          Name of the referent.
                                          This field is effectively required, but due to backwards compatibility is
                                          allowed to be empty. Instances of this type with an empty value here are
                                          almost certainly wrong.
                                          More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                        type: string
                                      optional:
                                        description: Specify whether the Secret or
                                          its key must be defined
                                        type: boolean
                                    required:
                                    - key
                                    type: object
                                    x-kubernetes-map-type: atomic
                                type: object
                              type: array
                          required:
                          - name
                          type: object
                        certificate:
                          description: |-
                            Certificate configures a PEM based Certificate file containing both the required certificates and any
                            associated private keys.
                          properties:
                            name:
                              type: string
                            value:
                              type: string
                            valueFrom:
                              items:
                                properties:
                                  configMapKeyRef:
                                    description: ConfigMapKeyRef selects a key of
                                      a ConfigMap
                                    properties:
                                      key:
                                        description: The key to select.
                                        type: string
                                      name:
                                        default: ""
                                        description: |-
                                          Name of the referent.
                                          This field is effectively required, but due to backwards compatibility is
                                          allowed to be empty. Instances of this type with an empty value here are
                                          almost certainly wrong.
                                          More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                        type: string
                                      optional:
                                        description: Specify whether the ConfigMap
                                          or its key must be defined
                                        type: boolean
                                    required:
                                    - key
                                    type: object
                                    x-kubernetes-map-type: atomic
                                  secretKeyRef:
                                    description: SecretKeyRef selects a key of a secret
                                      in the pod namespace
                                    properties:
                                      key:
                                        description: The key of the secret to select
                                          from.  Must be a valid secret key.
                                        type: string
                                      name:
                                        default: ""
                                        description: |-
                                          Name of the referent.
                                          This field is effectively required, but due to backwards compatibility is
                                          allowed to be empty. Instances of this type with an empty value here are
                                          almost certainly wrong.
                                          More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                        type: string
                                      optional:
                                        description: Specify whether the Secret or
                                          its key must be defined
                                        type: boolean
                                    required:
                                    - key
                                    type: object
                                    x-kubernetes-map-type: atomic
                                type: object
                              type: array
                          required:
                          - name
                          type: object
                        enabled:
                          description: |-
                            Enabled enables SSL deciphering on connections instantiated from this listener. A
                            certificate is necessary. All contents in the buffers will
                            appear in clear text, so that ACLs and HTTP processing will only have access
                            to deciphered contents. SSLv3 is disabled per default, set MinVersion to SSLv3
                            to enable it.
                          type: boolean
                        minVersion:
                          description: |-
                            MinVersion enforces use of the specified version or upper on SSL connections
                            instantiated from this listener.
                          enum:
                          - SSLv3
                          - TLSv1.0
                          - TLSv1.1
                          - TLSv1.2
                          - TLSv1.3
                          type: string
                        sni:
                          description: |-
                            SNI parameter evaluates the sample fetch expression, converts it to a
                            string and uses the result as the host name sent in the SNI TLS extension to
                            the server.
                          type: string
                        verify:
                          description: |-
                            Verify is only available when support for OpenSSL was built in. If set
                            to 'none', client certificate is not requested. This is the default. In other
                            cases, a client certificate is requested. If the client does not provide a
                            certificate after the request and if 'Verify' is set to 'required', then the
                            handshake is aborted, while it would have succeeded if set to 'optional'. The verification
                            of the certificate provided by the client using CAs from CACertificate.
                            On verify failure the handshake abortes, regardless of the 'verify' option.
                          enum:
                          - none
                          - optional
                          - required
                          type: string
                      required:
                      - enabled
                      type: object
                    verifyHost:
                      description: |-
                        VerifyHost is only available when support for OpenSSL was built in, and
                        only takes effect if pec.ssl.verify' is set to 'required'. This directive sets
                        a default static hostname to check the server certificate against when no
                        SNI was used to connect to the server.
                      type: string
                    weight:
                      description: |-
                        Weight parameter is used to adjust the server weight relative to
                        other servers. All servers will receive a load proportional to their weight
                        relative to the sum of all weights.
                      format: int64
                      maximum: 256
                      minimum: 0
                      type: integer
                  required:
                  - fqdn
                  - num
                  - port
                  - prefix
                  type: object
                type: array
              servers:
                description: Servers defines the backend servers and its configuration.
                items:
                  properties:
                    SendProxyV2:
                      description: SendProxyV2 preparing new update.
                      properties:
                        v1:
                          description: V1 parameter enforces use of the PROXY protocol
                            version 1.
                          type: boolean
                        v2:
                          description: V2 parameter enforces use of the PROXY protocol
                            version 2.
                          properties:
                            enabled:
                              description: Enabled enables the PROXY protocol version
                                2.
                              type: boolean
                            options:
                              description: Options is a list of options to add to
                                the PROXY protocol header.
                              properties:
                                authority:
                                  description: Authority is the host name value passed
                                    by the client (only SNI from a TLS)
                                  type: boolean
                                certCn:
                                  description: CertCn is equivalent to use V2SSLCN.
                                  type: boolean
                                certKey:
                                  description: CertKey is the key algorithm of the
                                    used certificate.
                                  type: boolean
                                certSig:
                                  description: CertSig is the signature algorithm
                                    of the used certificate.
                                  type: boolean
                                crc32C:
                                  description: Crc32c is the checksum of the PROXYv2
                                    header.
                                  type: boolean
                                ssl:
                                  description: Ssl is equivalent to use V2SSL.
                                  type: boolean
                                sslCipher:
                                  description: SslCipher is the name of the used cipher.
                                  type: boolean
                                uniqueID:
                                  description: |-
                                    UniqueId sends a unique ID generated using the frontend's "unique-id-format" within the PROXYv2 header.
                                    This unique-id is primarily meant for "mode tcp". It can lead to unexpected results in "mode http".
                                  type: boolean
                              type: object
                          type: object
                        v2SSL:
                          description: V2SSL parameter add the SSL information extension
                            of the PROXY protocol to the PROXY protocol header.
                          type: boolean
                        v2SSLCN:
                          description: |-
                            V2SSLCN parameter add the SSL information extension of the PROXY protocol to the PROXY protocol header and he SSL information extension
                            along with the Common Name from the subject of the client certificate (if any), is added to the PROXY protocol header.
                          type: boolean
                      type: object
                    address:
                      description: Address can be a host name, an IPv4 address, an
                        IPv6 address.
                      pattern: ^[^\s]+$
                      type: string
                    check:
                      description: Check configures the health checks of the server.
                      properties:
                        enabled:
                          description: |-
                            Enable enables health checks on a server. If not set, no health checking is performed, and the server is always
                            considered available.
                          type: boolean
                        fall:
                          description: |-
                            Fall specifies the number of consecutive unsuccessful health checks after a server will be considered as dead.
                            This value defaults to 3 if unspecified.
                          format: int64
                          type: integer
                        inter:
                          description: Inter sets the interval between two consecutive
                            health checks. If left unspecified, the delay defaults
                            to 2000 ms.
                          type: string
                        rise:
                          description: |-
                            Rise specifies the number of consecutive successful health checks after a server will be considered as operational.
                            This value defaults to 2 if unspecified.
                          format: int64
                          type: integer
                      required:
                      - enabled
                      type: object
                    checkSNI:
                      description: CheckSNI This option allows you to specify the
                        SNI to be used when doing health checks over SSL
                      type: string
                    cookie:
                      description: Cookie sets the cookie value assigned to the server.
                      type: boolean
                    initAddr:
                      description: |-
                        InitAddr indicates in what order the server address should be resolved upon startup if it uses an FQDN.
                        Attempts are made to resolve the address by applying in turn each of the methods mentioned in the comma-delimited
                        list. The first method which succeeds is used.
                      type: string
                    name:
                      description: Name of the server.
                      type: string
                    port:
                      description: Port
                      format: int64
                      maximum: 65535
                      minimum: 1
                      type: integer
                    resolvers:
                      description: Resolvers points to an existing resolvers to resolve
                        current server hostname.
                      properties:
                        name:
                          default: ""
                          description: |-
                            Name of the referent.
                            This field is effectively required, but due to backwards compatibility is
                            allowed to be empty. Instances of this type with an empty value here are
                            almost certainly wrong.
                            More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                          type: string
                      type: object
                      x-kubernetes-map-type: atomic
                    sendProxy:
                      description: |-
                        SendProxy enforces use of the PROXY protocol over any
                        connection established to this server. The PROXY protocol informs the other
                        end about the layer 3/4 addresses of the incoming connection, so that it can
                        know the client address or the public address it accessed to, whatever the
                        upper layer protocol.
                      type: boolean
                    ssl:
                      description: SSL configures OpenSSL
                      properties:
                        alpn:
                          description: |-
                            Alpn enables the TLS ALPN extension and advertises the specified protocol
                            list as supported on top of ALPN.
                          items:
                            type: string
                          type: array
                        caCertificate:
                          description: CACertificate configures the CACertificate
                            used for the Server or Bind client certificate
                          properties:
                            name:
                              type: string
                            value:
                              type: string
                            valueFrom:
                              items:
                                properties:
                                  configMapKeyRef:
                                    description: ConfigMapKeyRef selects a key of
                                      a ConfigMap
                                    properties:
                                      key:
                                        description: The key to select.
                                        type: string
                                      name:
                                        default: ""
                                        description: |-
                                          Name of the referent.
                                          This field is effectively required, but due to backwards compatibility is
                                          allowed to be empty. Instances of this type with an empty value here are
                                          almost certainly wrong.
                                          More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                        type: string
                                      optional:
                                        description: Specify whether the ConfigMap
                                          or its key must be defined
                                        type: boolean
                                    required:
                                    - key
                                    type: object
                                    x-kubernetes-map-type: atomic
                                  secretKeyRef:
                                    description: SecretKeyRef selects a key of a secret
                                      in the pod namespace
                                    properties:
                                      key:
                                        description: The key of the secret to select
                                          from.  Must be a valid secret key.
                                        type: string
                                      name:
                                        default: ""
                                        description: |-
                                          Name of the referent.
                                          This field is effectively required, but due to backwards compatibility is
                                          allowed to be empty. Instances of this type with an empty value here are
                                          almost certainly wrong.
                                          More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                        type: string
                                      optional:
                                        description: Specify whether the Secret or
                                          its key must be defined
                                        type: boolean
                                    required:
                                    - key
                                    type: object
                                    x-kubernetes-map-type: atomic
                                type: object
                              type: array
                          required:
                          - name
                          type: object
                        certificate:
                          description: |-
                            Certificate configures a PEM based Certificate file containing both the required certificates and any
                            associated private keys.
                          properties:
                            name:
                              type: string
                            value:
                              type: string
                            valueFrom:
                              items:
                                properties:
                                  configMapKeyRef:
                                    description: ConfigMapKeyRef selects a key of
                                      a ConfigMap
                                    properties:
                                      key:
                                        description: The key to select.
                                        type: string
                                      name:
                                        default: ""
                                        description: |-
                                          Name of the referent.
                                          This field is effectively required, but due to backwards compatibility is
                                          allowed to be empty. Instances of this type with an empty value here are
                                          almost certainly wrong.
                                          More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                        type: string
                                      optional:
                                        description: Specify whether the ConfigMap
                                          or its key must be defined
                                        type: boolean
                                    required:
                                    - key
                                    type: object
                                    x-kubernetes-map-type: atomic
                                  secretKeyRef:
                                    description: SecretKeyRef selects a key of a secret
                                      in the pod namespace
                                    properties:
                                      key:
                                        description: The key of the secret to select
                                          from.  Must be a valid secret key.
                                        type: string
                                      name:
                                        default: ""
                                        description: |-
                                          Name of the referent.
                                          This field is effectively required, but due to backwards compatibility is
                                          allowed to be empty. Instances of this type with an empty value here are
                                          almost certainly wrong.
                                          More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                        type: string
                                      optional:
                                        description: Specify whether the Secret or
                                          its key must be defined
                                        type: boolean
                                    required:
                                    - key
                                    type: object
                                    x-kubernetes-map-type: atomic
                                type: object
                              type: array
                          required:
                          - name
                          type: object
                        enabled:
                          description: |-
                            Enabled enables SSL deciphering on connections instantiated from this listener. A
                            certificate is necessary. All contents in the buffers will
                            appear in clear text, so that ACLs and HTTP processing will only have access
                            to deciphered contents. SSLv3 is disabled per default, set MinVersion to SSLv3
                            to enable it.
                          type: boolean
                        minVersion:
                          description: |-
                            MinVersion enforces use of the specified version or upper on SSL connections
                            instantiated from this listener.
                          enum:
                          - SSLv3
                          - TLSv1.0
                          - TLSv1.1
                          - TLSv1.2
                          - TLSv1.3
                          type: string
                        sni:
                          description: |-
                            SNI parameter evaluates the sample fetch expression, converts it to a
                            string and uses the result as the host name sent in the SNI TLS extension to
                            the server.
                          type: string
                        verify:
                          description: |-
                            Verify is only available when support for OpenSSL was built in. If set
                            to 'none', client certificate is not requested. This is the default. In other
                            cases, a client certificate is requested. If the client does not provide a
                            certificate after the request and if 'Verify' is set to 'required', then the
                            handshake is aborted, while it would have succeeded if set to 'optional'. The verification
                            of the certificate provided by the client using CAs from CACertificate.
                            On verify failure the handshake abortes, regardless of the 'verify' option.
                          enum:
                          - none
                          - optional
                          - required
                          type: string
                      required:
                      - enabled
                      type: object
                    verifyHost:
                      description: |-
                        VerifyHost is only available when support for OpenSSL was built in, and
                        only takes effect if pec.ssl.verify' is set to 'required'. This directive sets
                        a default static hostname to check the server certificate against when no
                        SNI was used to connect to the server.
                      type: string
                    weight:
                      description: |-
                        Weight parameter is used to adjust the server weight relative to
                        other servers. All servers will receive a load proportional to their weight
                        relative to the sum of all weights.
                      format: int64
                      maximum: 256
                      minimum: 0
                      type: integer
                  required:
                  - address
                  - name
                  - port
                  type: object
                type: array
              tcpCheck:
                description: TCPCheck Perform health checks using tcp-check send/expect
                  sequences
                type: boolean
              tcpLog:
                description: |-
                  TCPLog enables advanced logging of TCP connections with session state and timers. By default, the log output format
                  is very poor, as it only contains the source and destination addresses, and the instance name.
                type: boolean
              tcpRequest:
                description: TCPRequest rules perform an action on an incoming connection
                  depending on a layer 4 condition.
                items:
                  properties:
                    action:
                      description: Action defines the action to perform if the condition
                        applies.
                      enum:
                      - accept
                      - capture
                      - do-resolve
                      - expect-netscaler-cip
                      - expect-proxy
                      - reject
                      - sc-inc-gpc0
                      - sc-inc-gpc1
                      - sc-set-gpt0
                      - send-spoe-group
                      - set-dst-port
                      - set-dst
                      - set-priority
                      - set-src
                      - set-var
                      - silent-drop
                      - track-sc0
                      - track-sc1
                      - track-sc2
                      - unset-var
                      - use-service
                      - lua
                      type: string
                    condition:
                      description: Condition is a condition composed of ACLs.
                      type: string
                    conditionType:
                      description: ConditionType specifies the type of the condition
                        matching ('if' or 'unless')
                      enum:
                      - if
                      - unless
                      type: string
                    timeout:
                      description: Timeout sets timeout for the action
                      type: string
                    type:
                      description: Type specifies the type of the tcp-request rule.
                      enum:
                      - connection
                      - content
                      - inspect-delay
                      - session
                      type: string
                  required:
                  - type
                  type: object
                type: array
              timeouts:
                additionalProperties:
                  type: string
                description: |-
                  Timeouts: check, connect, http-keep-alive, http-request, queue, server, tunnel.
                  The timeout value specified in milliseconds by default, but can be in any other unit if the number is suffixed by the unit.
                  More info: https://cbonte.github.io/haproxy-dconv/2.6/configuration.html
                type: object
            required:
            - mode
            type: object
          status:
            description: Status defines the observed state of an object
            properties:
              error:
                description: Error shows the actual error message if Phase is 'Error'.
                type: string
              observedGeneration:
                description: ObservedGeneration the generation observed by the controller.
                format: int64
                type: integer
              phase:
                description: Phase is a simple, high-level summary of where the object
                  is in its lifecycle.
                type: string
            required:
            - phase
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
