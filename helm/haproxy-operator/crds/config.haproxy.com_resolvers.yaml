---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.17.2
  name: resolvers.config.haproxy.com
spec:
  group: config.haproxy.com
  names:
    kind: Resolver
    listKind: ResolverList
    plural: resolvers
    singular: resolver
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .spec.mode
      name: Mode
      type: string
    - jsonPath: .status.phase
      name: Phase
      type: string
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: Resolver is the Schema for the Resolver API
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: ResolverSpec defines the desired state of Resolver
            properties:
              acceptedPayloadSize:
                description: |-
                  AcceptedPayloadSize defines the maximum payload size accepted by HAProxy and announced to all the  name servers
                  configured in this resolver.
                format: int64
                maximum: 8192
                minimum: 512
                type: integer
              hold:
                description: Hold defines the period during which the last name resolution
                  should be kept based on the last resolution status.
                properties:
                  nx:
                    description: Nx defines interval between two successive name resolution
                      when the last answer was nx.
                    type: string
                  obsolete:
                    description: Obsolete defines interval between two successive
                      name resolution when the last answer was obsolete.
                    type: string
                  other:
                    description: Other defines interval between two successive name
                      resolution when the last answer was other.
                    type: string
                  refused:
                    description: Refused defines interval between two successive name
                      resolution when the last answer was nx.
                    type: string
                  timeout:
                    description: Timeout defines interval between two successive name
                      resolution when the last answer was timeout.
                    type: string
                  valid:
                    description: Valid defines interval between two successive name
                      resolution when the last answer was valid.
                    type: string
                type: object
              nameservers:
                description: Nameservers used to configure a nameservers.
                items:
                  properties:
                    address:
                      description: Address
                      pattern: ^[^\s]+$
                      type: string
                    name:
                      description: Name specifies a unique name of the nameserver.
                      pattern: ^[A-Za-z0-9-_.:]+$
                      type: string
                    port:
                      description: Port
                      format: int64
                      maximum: 65535
                      minimum: 1
                      type: integer
                  required:
                  - address
                  - name
                  type: object
                type: array
              parseResolvConf:
                description: ParseResolvConf if true, adds all nameservers found in
                  /etc/resolv.conf to this resolvers nameservers list.
                type: boolean
              resolveRetries:
                description: 'ResolveRetries defines the number <nb> of queries to
                  send to resolve a server name before giving up. Default value: 3'
                format: int64
                minimum: 1
                type: integer
              timeouts:
                description: Timeouts defines timeouts related to name resolution.
                properties:
                  resolve:
                    description: 'Resolve time to trigger name resolutions when no
                      other time applied. Default value: 1s'
                    type: string
                  retry:
                    description: 'Retry time between two DNS queries, when no valid
                      response have been received. Default value: 1s'
                    type: string
                type: object
            type: object
          status:
            description: Status defines the observed state of an object
            properties:
              error:
                description: Error shows the actual error message if Phase is 'Error'.
                type: string
              observedGeneration:
                description: ObservedGeneration the generation observed by the controller.
                format: int64
                type: integer
              phase:
                description: Phase is a simple, high-level summary of where the object
                  is in its lifecycle.
                type: string
            required:
            - phase
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
