//go:build !ignore_autogenerated

/*
Copyright 2023 SIX Group Services Ltd., Switzerland

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by controller-gen. DO NOT EDIT.

package v1alpha1

import (
	corev1 "k8s.io/api/core/v1"
	"k8s.io/apimachinery/pkg/apis/meta/v1"
	runtime "k8s.io/apimachinery/pkg/runtime"
)

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ACL) DeepCopyInto(out *ACL) {
	*out = *in
	if in.Values != nil {
		in, out := &in.Values, &out.Values
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ACL.
func (in *ACL) DeepCopy() *ACL {
	if in == nil {
		return nil
	}
	out := new(ACL)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Backend) DeepCopyInto(out *Backend) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	out.Status = in.Status
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Backend.
func (in *Backend) DeepCopy() *Backend {
	if in == nil {
		return nil
	}
	out := new(Backend)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *Backend) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *BackendList) DeepCopyInto(out *BackendList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]Backend, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new BackendList.
func (in *BackendList) DeepCopy() *BackendList {
	if in == nil {
		return nil
	}
	out := new(BackendList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *BackendList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *BackendReference) DeepCopyInto(out *BackendReference) {
	*out = *in
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.RegexMapping != nil {
		in, out := &in.RegexMapping, &out.RegexMapping
		*out = new(RegexBackendMapping)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new BackendReference.
func (in *BackendReference) DeepCopy() *BackendReference {
	if in == nil {
		return nil
	}
	out := new(BackendReference)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *BackendSpec) DeepCopyInto(out *BackendSpec) {
	*out = *in
	in.BaseSpec.DeepCopyInto(&out.BaseSpec)
	if in.CheckTimeout != nil {
		in, out := &in.CheckTimeout, &out.CheckTimeout
		*out = new(v1.Duration)
		**out = **in
	}
	if in.Servers != nil {
		in, out := &in.Servers, &out.Servers
		*out = make([]Server, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ServerTemplates != nil {
		in, out := &in.ServerTemplates, &out.ServerTemplates
		*out = make([]ServerTemplate, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Balance != nil {
		in, out := &in.Balance, &out.Balance
		*out = new(Balance)
		**out = **in
	}
	if in.HostCertificate != nil {
		in, out := &in.HostCertificate, &out.HostCertificate
		*out = new(CertificateListElement)
		(*in).DeepCopyInto(*out)
	}
	if in.Redispatch != nil {
		in, out := &in.Redispatch, &out.Redispatch
		*out = new(bool)
		**out = **in
	}
	if in.HashType != nil {
		in, out := &in.HashType, &out.HashType
		*out = new(HashType)
		**out = **in
	}
	if in.Cookie != nil {
		in, out := &in.Cookie, &out.Cookie
		*out = new(Cookie)
		(*in).DeepCopyInto(*out)
	}
	if in.HTTPChk != nil {
		in, out := &in.HTTPChk, &out.HTTPChk
		*out = new(HTTPChk)
		**out = **in
	}
	if in.TCPCheck != nil {
		in, out := &in.TCPCheck, &out.TCPCheck
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new BackendSpec.
func (in *BackendSpec) DeepCopy() *BackendSpec {
	if in == nil {
		return nil
	}
	out := new(BackendSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *BackendSwitchingRule) DeepCopyInto(out *BackendSwitchingRule) {
	*out = *in
	out.Rule = in.Rule
	in.Backend.DeepCopyInto(&out.Backend)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new BackendSwitchingRule.
func (in *BackendSwitchingRule) DeepCopy() *BackendSwitchingRule {
	if in == nil {
		return nil
	}
	out := new(BackendSwitchingRule)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Balance) DeepCopyInto(out *Balance) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Balance.
func (in *Balance) DeepCopy() *Balance {
	if in == nil {
		return nil
	}
	out := new(Balance)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *BaseSpec) DeepCopyInto(out *BaseSpec) {
	*out = *in
	if in.HTTPResponse != nil {
		in, out := &in.HTTPResponse, &out.HTTPResponse
		*out = new(HTTPResponseRules)
		(*in).DeepCopyInto(*out)
	}
	if in.HTTPRequest != nil {
		in, out := &in.HTTPRequest, &out.HTTPRequest
		*out = new(HTTPRequestRules)
		(*in).DeepCopyInto(*out)
	}
	if in.TCPRequest != nil {
		in, out := &in.TCPRequest, &out.TCPRequest
		*out = make([]TCPRequestRule, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ACL != nil {
		in, out := &in.ACL, &out.ACL
		*out = make([]ACL, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Timeouts != nil {
		in, out := &in.Timeouts, &out.Timeouts
		*out = make(map[string]v1.Duration, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.ErrorFiles != nil {
		in, out := &in.ErrorFiles, &out.ErrorFiles
		*out = make([]*ErrorFile, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(ErrorFile)
				(*in).DeepCopyInto(*out)
			}
		}
	}
	if in.Forwardfor != nil {
		in, out := &in.Forwardfor, &out.Forwardfor
		*out = new(Forwardfor)
		**out = **in
	}
	if in.HTTPPretendKeepalive != nil {
		in, out := &in.HTTPPretendKeepalive, &out.HTTPPretendKeepalive
		*out = new(bool)
		**out = **in
	}
	if in.HTTPLog != nil {
		in, out := &in.HTTPLog, &out.HTTPLog
		*out = new(bool)
		**out = **in
	}
	if in.TCPLog != nil {
		in, out := &in.TCPLog, &out.TCPLog
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new BaseSpec.
func (in *BaseSpec) DeepCopy() *BaseSpec {
	if in == nil {
		return nil
	}
	out := new(BaseSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Bind) DeepCopyInto(out *Bind) {
	*out = *in
	if in.PortRangeEnd != nil {
		in, out := &in.PortRangeEnd, &out.PortRangeEnd
		*out = new(int64)
		**out = **in
	}
	if in.SSL != nil {
		in, out := &in.SSL, &out.SSL
		*out = new(SSL)
		(*in).DeepCopyInto(*out)
	}
	if in.SSLCertificateList != nil {
		in, out := &in.SSLCertificateList, &out.SSLCertificateList
		*out = new(CertificateList)
		(*in).DeepCopyInto(*out)
	}
	if in.Hidden != nil {
		in, out := &in.Hidden, &out.Hidden
		*out = new(bool)
		**out = **in
	}
	if in.AcceptProxy != nil {
		in, out := &in.AcceptProxy, &out.AcceptProxy
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Bind.
func (in *Bind) DeepCopy() *Bind {
	if in == nil {
		return nil
	}
	out := new(Bind)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CertificateList) DeepCopyInto(out *CertificateList) {
	*out = *in
	if in.Elements != nil {
		in, out := &in.Elements, &out.Elements
		*out = make([]CertificateListElement, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.LabelSelector != nil {
		in, out := &in.LabelSelector, &out.LabelSelector
		*out = new(v1.LabelSelector)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CertificateList.
func (in *CertificateList) DeepCopy() *CertificateList {
	if in == nil {
		return nil
	}
	out := new(CertificateList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CertificateListElement) DeepCopyInto(out *CertificateListElement) {
	*out = *in
	in.Certificate.DeepCopyInto(&out.Certificate)
	if in.Alpn != nil {
		in, out := &in.Alpn, &out.Alpn
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.OcspFile != nil {
		in, out := &in.OcspFile, &out.OcspFile
		*out = new(OcspFile)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CertificateListElement.
func (in *CertificateListElement) DeepCopy() *CertificateListElement {
	if in == nil {
		return nil
	}
	out := new(CertificateListElement)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Check) DeepCopyInto(out *Check) {
	*out = *in
	if in.Inter != nil {
		in, out := &in.Inter, &out.Inter
		*out = new(v1.Duration)
		**out = **in
	}
	if in.Rise != nil {
		in, out := &in.Rise, &out.Rise
		*out = new(int64)
		**out = **in
	}
	if in.Fall != nil {
		in, out := &in.Fall, &out.Fall
		*out = new(int64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Check.
func (in *Check) DeepCopy() *Check {
	if in == nil {
		return nil
	}
	out := new(Check)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Cookie) DeepCopyInto(out *Cookie) {
	*out = *in
	out.Mode = in.Mode
	if in.Indirect != nil {
		in, out := &in.Indirect, &out.Indirect
		*out = new(bool)
		**out = **in
	}
	if in.NoCache != nil {
		in, out := &in.NoCache, &out.NoCache
		*out = new(bool)
		**out = **in
	}
	if in.PostOnly != nil {
		in, out := &in.PostOnly, &out.PostOnly
		*out = new(bool)
		**out = **in
	}
	if in.Preserve != nil {
		in, out := &in.Preserve, &out.Preserve
		*out = new(bool)
		**out = **in
	}
	if in.HTTPOnly != nil {
		in, out := &in.HTTPOnly, &out.HTTPOnly
		*out = new(bool)
		**out = **in
	}
	if in.Secure != nil {
		in, out := &in.Secure, &out.Secure
		*out = new(bool)
		**out = **in
	}
	if in.Dynamic != nil {
		in, out := &in.Dynamic, &out.Dynamic
		*out = new(bool)
		**out = **in
	}
	if in.Domain != nil {
		in, out := &in.Domain, &out.Domain
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.Attribute != nil {
		in, out := &in.Attribute, &out.Attribute
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Cookie.
func (in *Cookie) DeepCopy() *Cookie {
	if in == nil {
		return nil
	}
	out := new(Cookie)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CookieMode) DeepCopyInto(out *CookieMode) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CookieMode.
func (in *CookieMode) DeepCopy() *CookieMode {
	if in == nil {
		return nil
	}
	out := new(CookieMode)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Deny) DeepCopyInto(out *Deny) {
	*out = *in
	out.Rule = in.Rule
	if in.DenyStatus != nil {
		in, out := &in.DenyStatus, &out.DenyStatus
		*out = new(int64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Deny.
func (in *Deny) DeepCopy() *Deny {
	if in == nil {
		return nil
	}
	out := new(Deny)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ErrorFile) DeepCopyInto(out *ErrorFile) {
	*out = *in
	in.File.DeepCopyInto(&out.File)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ErrorFile.
func (in *ErrorFile) DeepCopy() *ErrorFile {
	if in == nil {
		return nil
	}
	out := new(ErrorFile)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ErrorFileValueFrom) DeepCopyInto(out *ErrorFileValueFrom) {
	*out = *in
	if in.ConfigMapKeyRef != nil {
		in, out := &in.ConfigMapKeyRef, &out.ConfigMapKeyRef
		*out = new(corev1.ConfigMapKeySelector)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ErrorFileValueFrom.
func (in *ErrorFileValueFrom) DeepCopy() *ErrorFileValueFrom {
	if in == nil {
		return nil
	}
	out := new(ErrorFileValueFrom)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Forwardfor) DeepCopyInto(out *Forwardfor) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Forwardfor.
func (in *Forwardfor) DeepCopy() *Forwardfor {
	if in == nil {
		return nil
	}
	out := new(Forwardfor)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Frontend) DeepCopyInto(out *Frontend) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	out.Status = in.Status
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Frontend.
func (in *Frontend) DeepCopy() *Frontend {
	if in == nil {
		return nil
	}
	out := new(Frontend)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *Frontend) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FrontendList) DeepCopyInto(out *FrontendList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]Frontend, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FrontendList.
func (in *FrontendList) DeepCopy() *FrontendList {
	if in == nil {
		return nil
	}
	out := new(FrontendList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *FrontendList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FrontendSpec) DeepCopyInto(out *FrontendSpec) {
	*out = *in
	in.BaseSpec.DeepCopyInto(&out.BaseSpec)
	if in.Binds != nil {
		in, out := &in.Binds, &out.Binds
		*out = make([]Bind, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.BackendSwitching != nil {
		in, out := &in.BackendSwitching, &out.BackendSwitching
		*out = make([]BackendSwitchingRule, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	out.DefaultBackend = in.DefaultBackend
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FrontendSpec.
func (in *FrontendSpec) DeepCopy() *FrontendSpec {
	if in == nil {
		return nil
	}
	out := new(FrontendSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *HTTPChk) DeepCopyInto(out *HTTPChk) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new HTTPChk.
func (in *HTTPChk) DeepCopy() *HTTPChk {
	if in == nil {
		return nil
	}
	out := new(HTTPChk)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *HTTPDeleteHeaderRule) DeepCopyInto(out *HTTPDeleteHeaderRule) {
	*out = *in
	out.Rule = in.Rule
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new HTTPDeleteHeaderRule.
func (in *HTTPDeleteHeaderRule) DeepCopy() *HTTPDeleteHeaderRule {
	if in == nil {
		return nil
	}
	out := new(HTTPDeleteHeaderRule)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *HTTPHeaderRule) DeepCopyInto(out *HTTPHeaderRule) {
	*out = *in
	out.Rule = in.Rule
	in.Value.DeepCopyInto(&out.Value)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new HTTPHeaderRule.
func (in *HTTPHeaderRule) DeepCopy() *HTTPHeaderRule {
	if in == nil {
		return nil
	}
	out := new(HTTPHeaderRule)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *HTTPHeaderValue) DeepCopyInto(out *HTTPHeaderValue) {
	*out = *in
	if in.Env != nil {
		in, out := &in.Env, &out.Env
		*out = new(corev1.EnvVar)
		(*in).DeepCopyInto(*out)
	}
	if in.Str != nil {
		in, out := &in.Str, &out.Str
		*out = new(string)
		**out = **in
	}
	if in.Format != nil {
		in, out := &in.Format, &out.Format
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new HTTPHeaderValue.
func (in *HTTPHeaderValue) DeepCopy() *HTTPHeaderValue {
	if in == nil {
		return nil
	}
	out := new(HTTPHeaderValue)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *HTTPPathRule) DeepCopyInto(out *HTTPPathRule) {
	*out = *in
	out.Rule = in.Rule
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new HTTPPathRule.
func (in *HTTPPathRule) DeepCopy() *HTTPPathRule {
	if in == nil {
		return nil
	}
	out := new(HTTPPathRule)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *HTTPPretendKeepalive) DeepCopyInto(out *HTTPPretendKeepalive) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new HTTPPretendKeepalive.
func (in *HTTPPretendKeepalive) DeepCopy() *HTTPPretendKeepalive {
	if in == nil {
		return nil
	}
	out := new(HTTPPretendKeepalive)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *HTTPRequestRules) DeepCopyInto(out *HTTPRequestRules) {
	*out = *in
	if in.SetHeader != nil {
		in, out := &in.SetHeader, &out.SetHeader
		*out = make([]HTTPHeaderRule, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SetPath != nil {
		in, out := &in.SetPath, &out.SetPath
		*out = make([]HTTPPathRule, len(*in))
		copy(*out, *in)
	}
	if in.AddHeader != nil {
		in, out := &in.AddHeader, &out.AddHeader
		*out = make([]HTTPHeaderRule, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.DelHeader != nil {
		in, out := &in.DelHeader, &out.DelHeader
		*out = make([]HTTPDeleteHeaderRule, len(*in))
		copy(*out, *in)
	}
	if in.Redirect != nil {
		in, out := &in.Redirect, &out.Redirect
		*out = make([]Redirect, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ReplacePath != nil {
		in, out := &in.ReplacePath, &out.ReplacePath
		*out = make([]ReplacePath, len(*in))
		copy(*out, *in)
	}
	if in.Deny != nil {
		in, out := &in.Deny, &out.Deny
		*out = make([]Deny, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Return != nil {
		in, out := &in.Return, &out.Return
		*out = new(HTTPReturn)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new HTTPRequestRules.
func (in *HTTPRequestRules) DeepCopy() *HTTPRequestRules {
	if in == nil {
		return nil
	}
	out := new(HTTPRequestRules)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *HTTPResponseRules) DeepCopyInto(out *HTTPResponseRules) {
	*out = *in
	if in.SetHeader != nil {
		in, out := &in.SetHeader, &out.SetHeader
		*out = make([]HTTPHeaderRule, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new HTTPResponseRules.
func (in *HTTPResponseRules) DeepCopy() *HTTPResponseRules {
	if in == nil {
		return nil
	}
	out := new(HTTPResponseRules)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *HTTPReturn) DeepCopyInto(out *HTTPReturn) {
	*out = *in
	if in.Status != nil {
		in, out := &in.Status, &out.Status
		*out = new(int64)
		**out = **in
	}
	out.Content = in.Content
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new HTTPReturn.
func (in *HTTPReturn) DeepCopy() *HTTPReturn {
	if in == nil {
		return nil
	}
	out := new(HTTPReturn)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *HTTPReturnContent) DeepCopyInto(out *HTTPReturnContent) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new HTTPReturnContent.
func (in *HTTPReturnContent) DeepCopy() *HTTPReturnContent {
	if in == nil {
		return nil
	}
	out := new(HTTPReturnContent)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *HashType) DeepCopyInto(out *HashType) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new HashType.
func (in *HashType) DeepCopy() *HashType {
	if in == nil {
		return nil
	}
	out := new(HashType)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Hold) DeepCopyInto(out *Hold) {
	*out = *in
	if in.Nx != nil {
		in, out := &in.Nx, &out.Nx
		*out = new(v1.Duration)
		**out = **in
	}
	if in.Obsolete != nil {
		in, out := &in.Obsolete, &out.Obsolete
		*out = new(v1.Duration)
		**out = **in
	}
	if in.Other != nil {
		in, out := &in.Other, &out.Other
		*out = new(v1.Duration)
		**out = **in
	}
	if in.Refused != nil {
		in, out := &in.Refused, &out.Refused
		*out = new(v1.Duration)
		**out = **in
	}
	if in.Timeout != nil {
		in, out := &in.Timeout, &out.Timeout
		*out = new(v1.Duration)
		**out = **in
	}
	if in.Valid != nil {
		in, out := &in.Valid, &out.Valid
		*out = new(v1.Duration)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Hold.
func (in *Hold) DeepCopy() *Hold {
	if in == nil {
		return nil
	}
	out := new(Hold)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Listen) DeepCopyInto(out *Listen) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	out.Status = in.Status
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Listen.
func (in *Listen) DeepCopy() *Listen {
	if in == nil {
		return nil
	}
	out := new(Listen)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *Listen) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ListenList) DeepCopyInto(out *ListenList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]Listen, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ListenList.
func (in *ListenList) DeepCopy() *ListenList {
	if in == nil {
		return nil
	}
	out := new(ListenList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *ListenList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ListenSpec) DeepCopyInto(out *ListenSpec) {
	*out = *in
	in.BaseSpec.DeepCopyInto(&out.BaseSpec)
	if in.Binds != nil {
		in, out := &in.Binds, &out.Binds
		*out = make([]Bind, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Servers != nil {
		in, out := &in.Servers, &out.Servers
		*out = make([]Server, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ServerTemplates != nil {
		in, out := &in.ServerTemplates, &out.ServerTemplates
		*out = make([]ServerTemplate, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.CheckTimeout != nil {
		in, out := &in.CheckTimeout, &out.CheckTimeout
		*out = new(v1.Duration)
		**out = **in
	}
	if in.Balance != nil {
		in, out := &in.Balance, &out.Balance
		*out = new(Balance)
		**out = **in
	}
	if in.Redispatch != nil {
		in, out := &in.Redispatch, &out.Redispatch
		*out = new(bool)
		**out = **in
	}
	if in.HashType != nil {
		in, out := &in.HashType, &out.HashType
		*out = new(HashType)
		**out = **in
	}
	if in.Cookie != nil {
		in, out := &in.Cookie, &out.Cookie
		*out = new(Cookie)
		(*in).DeepCopyInto(*out)
	}
	if in.HostCertificate != nil {
		in, out := &in.HostCertificate, &out.HostCertificate
		*out = new(CertificateListElement)
		(*in).DeepCopyInto(*out)
	}
	if in.HTTPCheck != nil {
		in, out := &in.HTTPCheck, &out.HTTPCheck
		*out = new(HTTPChk)
		**out = **in
	}
	if in.TCPCheck != nil {
		in, out := &in.TCPCheck, &out.TCPCheck
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ListenSpec.
func (in *ListenSpec) DeepCopy() *ListenSpec {
	if in == nil {
		return nil
	}
	out := new(ListenSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Nameserver) DeepCopyInto(out *Nameserver) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Nameserver.
func (in *Nameserver) DeepCopy() *Nameserver {
	if in == nil {
		return nil
	}
	out := new(Nameserver)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OcspFile) DeepCopyInto(out *OcspFile) {
	*out = *in
	if in.Value != nil {
		in, out := &in.Value, &out.Value
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OcspFile.
func (in *OcspFile) DeepCopy() *OcspFile {
	if in == nil {
		return nil
	}
	out := new(OcspFile)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ProxyProtocol) DeepCopyInto(out *ProxyProtocol) {
	*out = *in
	if in.V2 != nil {
		in, out := &in.V2, &out.V2
		*out = new(ProxyProtocolV2)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ProxyProtocol.
func (in *ProxyProtocol) DeepCopy() *ProxyProtocol {
	if in == nil {
		return nil
	}
	out := new(ProxyProtocol)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ProxyProtocolV2) DeepCopyInto(out *ProxyProtocolV2) {
	*out = *in
	if in.Options != nil {
		in, out := &in.Options, &out.Options
		*out = new(ProxyProtocolV2Options)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ProxyProtocolV2.
func (in *ProxyProtocolV2) DeepCopy() *ProxyProtocolV2 {
	if in == nil {
		return nil
	}
	out := new(ProxyProtocolV2)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ProxyProtocolV2Options) DeepCopyInto(out *ProxyProtocolV2Options) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ProxyProtocolV2Options.
func (in *ProxyProtocolV2Options) DeepCopy() *ProxyProtocolV2Options {
	if in == nil {
		return nil
	}
	out := new(ProxyProtocolV2Options)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Redirect) DeepCopyInto(out *Redirect) {
	*out = *in
	out.Rule = in.Rule
	if in.Code != nil {
		in, out := &in.Code, &out.Code
		*out = new(int64)
		**out = **in
	}
	out.Type = in.Type
	if in.Option != nil {
		in, out := &in.Option, &out.Option
		*out = new(RedirectOption)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Redirect.
func (in *Redirect) DeepCopy() *Redirect {
	if in == nil {
		return nil
	}
	out := new(Redirect)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RedirectCookie) DeepCopyInto(out *RedirectCookie) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RedirectCookie.
func (in *RedirectCookie) DeepCopy() *RedirectCookie {
	if in == nil {
		return nil
	}
	out := new(RedirectCookie)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RedirectOption) DeepCopyInto(out *RedirectOption) {
	*out = *in
	if in.SetCookie != nil {
		in, out := &in.SetCookie, &out.SetCookie
		*out = new(RedirectCookie)
		**out = **in
	}
	if in.ClearCookie != nil {
		in, out := &in.ClearCookie, &out.ClearCookie
		*out = new(RedirectCookie)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RedirectOption.
func (in *RedirectOption) DeepCopy() *RedirectOption {
	if in == nil {
		return nil
	}
	out := new(RedirectOption)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RedirectType) DeepCopyInto(out *RedirectType) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RedirectType.
func (in *RedirectType) DeepCopy() *RedirectType {
	if in == nil {
		return nil
	}
	out := new(RedirectType)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RegexBackendMapping) DeepCopyInto(out *RegexBackendMapping) {
	*out = *in
	in.LabelSelector.DeepCopyInto(&out.LabelSelector)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RegexBackendMapping.
func (in *RegexBackendMapping) DeepCopy() *RegexBackendMapping {
	if in == nil {
		return nil
	}
	out := new(RegexBackendMapping)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ReplacePath) DeepCopyInto(out *ReplacePath) {
	*out = *in
	out.Rule = in.Rule
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ReplacePath.
func (in *ReplacePath) DeepCopy() *ReplacePath {
	if in == nil {
		return nil
	}
	out := new(ReplacePath)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Resolver) DeepCopyInto(out *Resolver) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	out.Status = in.Status
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Resolver.
func (in *Resolver) DeepCopy() *Resolver {
	if in == nil {
		return nil
	}
	out := new(Resolver)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *Resolver) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ResolverList) DeepCopyInto(out *ResolverList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]Resolver, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ResolverList.
func (in *ResolverList) DeepCopy() *ResolverList {
	if in == nil {
		return nil
	}
	out := new(ResolverList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *ResolverList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ResolverSpec) DeepCopyInto(out *ResolverSpec) {
	*out = *in
	if in.Nameservers != nil {
		in, out := &in.Nameservers, &out.Nameservers
		*out = make([]Nameserver, len(*in))
		copy(*out, *in)
	}
	if in.AcceptedPayloadSize != nil {
		in, out := &in.AcceptedPayloadSize, &out.AcceptedPayloadSize
		*out = new(int64)
		**out = **in
	}
	if in.ParseResolvConf != nil {
		in, out := &in.ParseResolvConf, &out.ParseResolvConf
		*out = new(bool)
		**out = **in
	}
	if in.ResolveRetries != nil {
		in, out := &in.ResolveRetries, &out.ResolveRetries
		*out = new(int64)
		**out = **in
	}
	if in.Hold != nil {
		in, out := &in.Hold, &out.Hold
		*out = new(Hold)
		(*in).DeepCopyInto(*out)
	}
	if in.Timeouts != nil {
		in, out := &in.Timeouts, &out.Timeouts
		*out = new(Timeouts)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ResolverSpec.
func (in *ResolverSpec) DeepCopy() *ResolverSpec {
	if in == nil {
		return nil
	}
	out := new(ResolverSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Rule) DeepCopyInto(out *Rule) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Rule.
func (in *Rule) DeepCopy() *Rule {
	if in == nil {
		return nil
	}
	out := new(Rule)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SSL) DeepCopyInto(out *SSL) {
	*out = *in
	if in.CACertificate != nil {
		in, out := &in.CACertificate, &out.CACertificate
		*out = new(SSLCertificate)
		(*in).DeepCopyInto(*out)
	}
	if in.Certificate != nil {
		in, out := &in.Certificate, &out.Certificate
		*out = new(SSLCertificate)
		(*in).DeepCopyInto(*out)
	}
	if in.Alpn != nil {
		in, out := &in.Alpn, &out.Alpn
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SSL.
func (in *SSL) DeepCopy() *SSL {
	if in == nil {
		return nil
	}
	out := new(SSL)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SSLCertificate) DeepCopyInto(out *SSLCertificate) {
	*out = *in
	if in.Value != nil {
		in, out := &in.Value, &out.Value
		*out = new(string)
		**out = **in
	}
	if in.ValueFrom != nil {
		in, out := &in.ValueFrom, &out.ValueFrom
		*out = make([]SSLCertificateValueFrom, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SSLCertificate.
func (in *SSLCertificate) DeepCopy() *SSLCertificate {
	if in == nil {
		return nil
	}
	out := new(SSLCertificate)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SSLCertificateValueFrom) DeepCopyInto(out *SSLCertificateValueFrom) {
	*out = *in
	if in.ConfigMapKeyRef != nil {
		in, out := &in.ConfigMapKeyRef, &out.ConfigMapKeyRef
		*out = new(corev1.ConfigMapKeySelector)
		(*in).DeepCopyInto(*out)
	}
	if in.SecretKeyRef != nil {
		in, out := &in.SecretKeyRef, &out.SecretKeyRef
		*out = new(corev1.SecretKeySelector)
		(*in).DeepCopyInto(*out)
	}
	if in.SecretKeyExternalRef != nil {
		in, out := &in.SecretKeyExternalRef, &out.SecretKeyExternalRef
		*out = new(SecretKeySelectorExternal)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SSLCertificateValueFrom.
func (in *SSLCertificateValueFrom) DeepCopy() *SSLCertificateValueFrom {
	if in == nil {
		return nil
	}
	out := new(SSLCertificateValueFrom)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SecretKeySelectorExternal) DeepCopyInto(out *SecretKeySelectorExternal) {
	*out = *in
	out.SecretReference = in.SecretReference
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SecretKeySelectorExternal.
func (in *SecretKeySelectorExternal) DeepCopy() *SecretKeySelectorExternal {
	if in == nil {
		return nil
	}
	out := new(SecretKeySelectorExternal)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Server) DeepCopyInto(out *Server) {
	*out = *in
	in.ServerParams.DeepCopyInto(&out.ServerParams)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Server.
func (in *Server) DeepCopy() *Server {
	if in == nil {
		return nil
	}
	out := new(Server)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ServerParams) DeepCopyInto(out *ServerParams) {
	*out = *in
	if in.SSL != nil {
		in, out := &in.SSL, &out.SSL
		*out = new(SSL)
		(*in).DeepCopyInto(*out)
	}
	if in.Weight != nil {
		in, out := &in.Weight, &out.Weight
		*out = new(int64)
		**out = **in
	}
	if in.Check != nil {
		in, out := &in.Check, &out.Check
		*out = new(Check)
		(*in).DeepCopyInto(*out)
	}
	if in.InitAddr != nil {
		in, out := &in.InitAddr, &out.InitAddr
		*out = new(string)
		**out = **in
	}
	if in.Resolvers != nil {
		in, out := &in.Resolvers, &out.Resolvers
		*out = new(corev1.LocalObjectReference)
		**out = **in
	}
	if in.SendProxy != nil {
		in, out := &in.SendProxy, &out.SendProxy
		*out = new(bool)
		**out = **in
	}
	if in.SendProxyV2 != nil {
		in, out := &in.SendProxyV2, &out.SendProxyV2
		*out = new(ProxyProtocol)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ServerParams.
func (in *ServerParams) DeepCopy() *ServerParams {
	if in == nil {
		return nil
	}
	out := new(ServerParams)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ServerTemplate) DeepCopyInto(out *ServerTemplate) {
	*out = *in
	in.ServerParams.DeepCopyInto(&out.ServerParams)
	if in.NumMin != nil {
		in, out := &in.NumMin, &out.NumMin
		*out = new(int64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ServerTemplate.
func (in *ServerTemplate) DeepCopy() *ServerTemplate {
	if in == nil {
		return nil
	}
	out := new(ServerTemplate)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *StaticHTTPFile) DeepCopyInto(out *StaticHTTPFile) {
	*out = *in
	if in.Value != nil {
		in, out := &in.Value, &out.Value
		*out = new(string)
		**out = **in
	}
	in.ValueFrom.DeepCopyInto(&out.ValueFrom)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new StaticHTTPFile.
func (in *StaticHTTPFile) DeepCopy() *StaticHTTPFile {
	if in == nil {
		return nil
	}
	out := new(StaticHTTPFile)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Status) DeepCopyInto(out *Status) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Status.
func (in *Status) DeepCopy() *Status {
	if in == nil {
		return nil
	}
	out := new(Status)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TCPRequestRule) DeepCopyInto(out *TCPRequestRule) {
	*out = *in
	out.Rule = in.Rule
	if in.Action != nil {
		in, out := &in.Action, &out.Action
		*out = new(string)
		**out = **in
	}
	if in.Timeout != nil {
		in, out := &in.Timeout, &out.Timeout
		*out = new(v1.Duration)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TCPRequestRule.
func (in *TCPRequestRule) DeepCopy() *TCPRequestRule {
	if in == nil {
		return nil
	}
	out := new(TCPRequestRule)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Timeouts) DeepCopyInto(out *Timeouts) {
	*out = *in
	if in.Resolve != nil {
		in, out := &in.Resolve, &out.Resolve
		*out = new(v1.Duration)
		**out = **in
	}
	if in.Retry != nil {
		in, out := &in.Retry, &out.Retry
		*out = new(v1.Duration)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Timeouts.
func (in *Timeouts) DeepCopy() *Timeouts {
	if in == nil {
		return nil
	}
	out := new(Timeouts)
	in.DeepCopyInto(out)
	return out
}
